import random
import csv
from statistics import mean, geometric_mean


trabajadores = [
    "Juan Perez", "Maria Garcia", "Carlos Lopez", "Ana Martinez", "Pedro Rodriguez",
    "Laura Hernandez", "Miguel Sanchez", "Isabel Gomez", "Francisco Diaz", "Elena Fernandez"
]


def asignar_sueldos_aleatorios():
    sueldos = {trabajador: round(random.uniform(300000, 2500000), 2) for trabajador in trabajadores}
    return sueldos


def clasificar_sueldos(sueldos):
    sueldos_clasificados = {
        'menores a 800000': [],
        'entre 800000 y 2000000': [],
        'mayores a 2000000': []
    }

    for trabajador, sueldo in sueldos.items():
        if sueldo < 800000:
            sueldos_clasificados['menores a 800000'].append((trabajador, sueldo))
        elif 800000 <= sueldo <= 2000000:
            sueldos_clasificados['entre 800000 y 2000000'].append((trabajador, sueldo))
        else:
            sueldos_clasificados['mayores a 2000000'].append((trabajador, sueldo))
    
    return sueldos_clasificados


def calcular_estadisticas(sueldos):
    sueldos_lista = list(sueldos.values())
    sueldo_maximo = max(sueldos_lista)
    sueldo_minimo = min(sueldos_lista)
    promedio = mean(sueldos_lista)
    media_geometrica = geometric_mean(sueldos_lista)
    return sueldo_maximo, sueldo_minimo, promedio, media_geometrica


def generar_reporte_sueldos(sueldos):
    with open('reporte_sueldos.csv', mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(['Nombre empleado', 'Sueldo Base', 'Descuento Salud', 'Descuento AFP', 'Sueldo Liquido'])
        
        for trabajador, sueldo in sueldos.items():
            descuento_salud = sueldo * 0.07
            descuento_afp = sueldo * 0.12
            sueldo_liquido = sueldo - descuento_salud - descuento_afp
            writer.writerow([trabajador, sueldo, descuento_salud, descuento_afp, sueldo_liquido])


def main():
    sueldos = {}

    while True:
        print("_________ Menú __________")
        print("1. Asignar sueldos aleatorios")
        print("2. Clasificar sueldos")
        print("3. Ver estadisticas")
        print("4. Generar reporte de sueldos")
        print("5. Salir del programa")

        opcion = input("Seleccione una opcion: ")

        if opcion == '1':
            sueldos = asignar_sueldos_aleatorios()
            print("Sueldos asignados aleatoriamente.")
        
        elif opcion == '2':
            if not sueldos:
                print("Debe asignar sueldos primero (opcion 1).")
            else:
                sueldos_clasificados = clasificar_sueldos(sueldos)
                for categoria, lista_empleados in sueldos_clasificados.items():
                    print(f"Sueldos {categoria.upper()} TOTAL: {len(lista_empleados)}")
                    print("Nombre empleado Sueldo")
                    for empleado in lista_empleados:
                        print(f"{empleado[0]} ${empleado[1]}")
        
        elif opcion == '3':
            if not sueldos:
                print("Debe asignar sueldos primero (opcion 1).")
            else:
                saldo_maximo, saldo_minimo, promedio, media_geo = calcular_estadisticas(sueldos)
                print("Estadisticas de sueldos:")
                print(f"Sueldo mas alto: ${saldo_maximo:.2f}")
                print(f"Sueldo mas bajo: ${saldo_minimo:.2f}")
                print(f"Promedio de sueldos: ${promedio:.2f}")
                print(f"Media geometrica de sueldos: ${media_geo:.2f}")
        
        elif opcion == '4':
            if not sueldos:
                print("Debe asignar sueldos primero (opcion 1).")
            else:
                generar_reporte_sueldos(sueldos)
                print("Reporte de sueldos generado en 'reporte_sueldos.csv'.")
        
        elif opcion == '5':
            print("Finalizando programa...")
            break
        
        else:
            print("Opción no valida. Intente nuevamente.")
    print("Desarrollado por Larry Montecino")
    print("RUT 20.883.113-5")
    print("Programa finalizado.")

if __name__ == "__main__":
    main()
